// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcStudyFu.EFCore.SQLSever;

namespace MvcStudyFu.EFCore.SQLSever.Migrations
{
    [DbContext(typeof(StudyMVCDBContext))]
    partial class StudyMVCDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MvcStudyFu.EFCore.SQLSever.DomainModel.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Account")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("CheckCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Moblie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("QQ")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("Remeber")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserPasswordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d62581f6-afa5-4ea8-ab2d-685cb0f3c291"),
                            Account = 1314520m,
                            CheckCode = "",
                            Name = "小杰",
                            UserPasswordId = new Guid("5c6bb15c-2c43-4714-b1ef-55a0d148238f")
                        });
                });

            modelBuilder.Entity("MvcStudyFu.EFCore.SQLSever.DomainModel.UserPassword", b =>
                {
                    b.Property<Guid>("UserPasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastPassword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserPasswordId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPassword");

                    b.HasData(
                        new
                        {
                            UserPasswordId = new Guid("5c6bb15c-2c43-4714-b1ef-55a0d148238f"),
                            NewPassword = "E10ADC3949BA59ABBE56E057F20F883E",
                            UserId = new Guid("d62581f6-afa5-4ea8-ab2d-685cb0f3c291")
                        });
                });

            modelBuilder.Entity("MvcStudyFu.EFCore.SQLSever.DomainModel.UserPassword", b =>
                {
                    b.HasOne("MvcStudyFu.EFCore.SQLSever.DomainModel.User", "User")
                        .WithOne("UserPassword")
                        .HasForeignKey("MvcStudyFu.EFCore.SQLSever.DomainModel.UserPassword", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MvcStudyFu.EFCore.SQLSever.DomainModel.User", b =>
                {
                    b.Navigation("UserPassword");
                });
#pragma warning restore 612, 618
        }
    }
}
