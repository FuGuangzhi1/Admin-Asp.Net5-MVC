// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcStudyFu.EFCore.SQLSever;

namespace MvcStudyFu.EFCore.SQLSever.Migrations
{
    [DbContext(typeof(StudyMVCDBContext))]
    partial class StudyMVCDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.StudyType", b =>
                {
                    b.Property<int>("StudyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudyTypeId");

                    b.ToTable("StudyType");

                    b.HasData(
                        new
                        {
                            StudyTypeId = 1,
                            StudyTypeName = "前端"
                        },
                        new
                        {
                            StudyTypeId = 2,
                            StudyTypeName = "后端"
                        },
                        new
                        {
                            StudyTypeId = 3,
                            StudyTypeName = "数据库"
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.Studyknowledge", b =>
                {
                    b.Property<Guid>("StudyknowledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("StudyknowledgeContent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StudyknowledgeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("StudyknowledgeId");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("Studyknowledge");
                });

            modelBuilder.Entity("StudyMVCFu.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Account")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hobby")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Moblie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("QQ")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("095823f4-f8cd-4310-b67e-46d3cb46ed66"),
                            Account = 1314520m,
                            Birthday = new DateTime(2001, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hobby = "Do Love",
                            Name = "小杰"
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.UserPassword", b =>
                {
                    b.Property<Guid>("UserPasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastPassword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserPasswordId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPassword");

                    b.HasData(
                        new
                        {
                            UserPasswordId = new Guid("3861259c-9557-4f36-a0cc-820b64d41ad0"),
                            NewPassword = "E10ADC3949BA59ABBE56E057F20F883E",
                            UserId = new Guid("095823f4-f8cd-4310-b67e-46d3cb46ed66")
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.Studyknowledge", b =>
                {
                    b.HasOne("StudyMVCFu.Model.DomainModel.StudyType", "StudyType")
                        .WithMany("Studyknowledge")
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyType");
                });

            modelBuilder.Entity("StudyMVCFu.Model.UserPassword", b =>
                {
                    b.HasOne("StudyMVCFu.Model.User", "User")
                        .WithOne("UserPassword")
                        .HasForeignKey("StudyMVCFu.Model.UserPassword", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.StudyType", b =>
                {
                    b.Navigation("Studyknowledge");
                });

            modelBuilder.Entity("StudyMVCFu.Model.User", b =>
                {
                    b.Navigation("UserPassword");
                });
#pragma warning restore 612, 618
        }
    }
}
