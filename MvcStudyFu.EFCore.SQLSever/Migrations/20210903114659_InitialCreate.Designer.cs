// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcStudyFu.EFCore.SQLSever;

namespace MvcStudyFu.EFCore.SQLSever.Migrations
{
    [DbContext(typeof(StudyMVCDBContext))]
    [Migration("20210903114659_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.LogRecord", b =>
                {
                    b.Property<Guid>("LogRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogRecordContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Weather")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogRecordId");

                    b.HasIndex("UserId");

                    b.ToTable("LogRecord");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.Resource", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Level")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("ResourceId");

                    b.ToTable("Resource");

                    b.HasData(
                        new
                        {
                            ResourceId = new Guid("b0ee42f1-0929-4eb3-93ff-73893c10aa79"),
                            Icon = "el-icon-user-solid",
                            Level = 0L,
                            Path = "",
                            ResourceName = "个人管理",
                            Sort = 0
                        },
                        new
                        {
                            ResourceId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            Icon = "el-icon-s-tools",
                            Level = 0L,
                            Path = "",
                            ResourceName = "系统管理",
                            Sort = 1
                        },
                        new
                        {
                            ResourceId = new Guid("0d56b08c-97a1-41c9-83b5-7fa5831f9804"),
                            Icon = "el-icon-s-grid",
                            Level = 1L,
                            ParentId = new Guid("b0ee42f1-0929-4eb3-93ff-73893c10aa79"),
                            Path = "/PersonalInfo/Index",
                            ResourceName = "个人信息",
                            Sort = 0
                        },
                        new
                        {
                            ResourceId = new Guid("32da8348-5535-4307-ad22-db8cc0e1aa42"),
                            Icon = "el-icon-s-grid",
                            Level = 1L,
                            ParentId = new Guid("b0ee42f1-0929-4eb3-93ff-73893c10aa79"),
                            Path = "/Study/Studyknowledge",
                            ResourceName = "学习数据",
                            Sort = 1
                        },
                        new
                        {
                            ResourceId = new Guid("fad0a4a3-b55f-425a-af34-8d0037d7d62a"),
                            Icon = "el-icon-s-grid",
                            Level = 1L,
                            ParentId = new Guid("b0ee42f1-0929-4eb3-93ff-73893c10aa79"),
                            Path = "/Journal/Index",
                            ResourceName = "日志记录",
                            Sort = 2
                        },
                        new
                        {
                            ResourceId = new Guid("5e247ca8-a8d8-4dd7-bd0a-383e8964b6d6"),
                            Icon = "el-icon-s-grid",
                            Level = 1L,
                            ParentId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            Path = "/UserManage/Index",
                            ResourceName = "用户管理",
                            Sort = 0
                        },
                        new
                        {
                            ResourceId = new Guid("23952603-1893-490e-be4f-694aed564939"),
                            Icon = "el-icon-s-grid",
                            Level = 1L,
                            ParentId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            Path = "/Role/Index",
                            ResourceName = "角色管理",
                            Sort = 1
                        },
                        new
                        {
                            ResourceId = new Guid("429cbdef-4c0a-4a69-9cc2-fc2435fe1c9a"),
                            Icon = "el-icon-s-grid",
                            Level = 1L,
                            ParentId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            Path = "/Permissions/index",
                            ResourceName = "权限管理",
                            Sort = 2
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleDescribe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            RoleDescribe = "拥有一切权利",
                            RoleName = "统治者"
                        },
                        new
                        {
                            RoleId = new Guid("c961e2f2-c389-417c-97a8-da94c703ca82"),
                            RoleDescribe = "没有改变权限的能力",
                            RoleName = "大将"
                        },
                        new
                        {
                            RoleId = new Guid("d662deff-a947-448e-a669-ae3466de3445"),
                            RoleDescribe = "基本功能的使用",
                            RoleName = "平民"
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.RoleResouce", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleResouceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("RoleResouce");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("b0ee42f1-0929-4eb3-93ff-73893c10aa79"),
                            RoleResouceId = new Guid("d768f21c-fc2a-40d7-b3cf-f02846333fb4")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            RoleResouceId = new Guid("c45d43e9-cff5-40d0-b292-2dceb83078e6")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("0d56b08c-97a1-41c9-83b5-7fa5831f9804"),
                            RoleResouceId = new Guid("f94aa4a7-4e9c-4d7b-8ac5-a8ec323da73e")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("32da8348-5535-4307-ad22-db8cc0e1aa42"),
                            RoleResouceId = new Guid("31db5bfa-7250-44ae-83bb-555df0976838")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("fad0a4a3-b55f-425a-af34-8d0037d7d62a"),
                            RoleResouceId = new Guid("b267ab57-018f-4b95-b1c8-f09ce449f535")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("5e247ca8-a8d8-4dd7-bd0a-383e8964b6d6"),
                            RoleResouceId = new Guid("98a5721d-3c93-42a0-9d9a-0c0af177c358")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("23952603-1893-490e-be4f-694aed564939"),
                            RoleResouceId = new Guid("b3fdbdbc-c361-469a-aab9-065f40d9d4a3")
                        },
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            ResourceId = new Guid("429cbdef-4c0a-4a69-9cc2-fc2435fe1c9a"),
                            RoleResouceId = new Guid("759a0bbc-4987-4ec5-bb7d-165cadcc5c25")
                        },
                        new
                        {
                            RoleId = new Guid("c961e2f2-c389-417c-97a8-da94c703ca82"),
                            ResourceId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            RoleResouceId = new Guid("9abf9460-bf24-4fb7-ae9d-c6546b4404aa")
                        },
                        new
                        {
                            RoleId = new Guid("c961e2f2-c389-417c-97a8-da94c703ca82"),
                            ResourceId = new Guid("0d56b08c-97a1-41c9-83b5-7fa5831f9804"),
                            RoleResouceId = new Guid("9ab435c5-141e-4bff-a7bf-d4fafd75d87a")
                        },
                        new
                        {
                            RoleId = new Guid("c961e2f2-c389-417c-97a8-da94c703ca82"),
                            ResourceId = new Guid("32da8348-5535-4307-ad22-db8cc0e1aa42"),
                            RoleResouceId = new Guid("5d0fac47-6faf-4293-883a-a5dbad588529")
                        },
                        new
                        {
                            RoleId = new Guid("c961e2f2-c389-417c-97a8-da94c703ca82"),
                            ResourceId = new Guid("fad0a4a3-b55f-425a-af34-8d0037d7d62a"),
                            RoleResouceId = new Guid("b6001fbd-3615-4998-8e7b-43985451c2df")
                        },
                        new
                        {
                            RoleId = new Guid("c961e2f2-c389-417c-97a8-da94c703ca82"),
                            ResourceId = new Guid("5e247ca8-a8d8-4dd7-bd0a-383e8964b6d6"),
                            RoleResouceId = new Guid("8884b162-73ab-49d7-b2bb-ac37e07c8be4")
                        },
                        new
                        {
                            RoleId = new Guid("d662deff-a947-448e-a669-ae3466de3445"),
                            ResourceId = new Guid("b0ee42f1-0929-4eb3-93ff-73893c10aa79"),
                            RoleResouceId = new Guid("c37749ff-a6e4-4108-aeac-d86a406989c1")
                        },
                        new
                        {
                            RoleId = new Guid("d662deff-a947-448e-a669-ae3466de3445"),
                            ResourceId = new Guid("434ab0a5-2b39-441e-ab84-27d8b19b52ff"),
                            RoleResouceId = new Guid("ca9eb305-9b0d-4a9f-b1c8-93cfc52eae6a")
                        },
                        new
                        {
                            RoleId = new Guid("d662deff-a947-448e-a669-ae3466de3445"),
                            ResourceId = new Guid("0d56b08c-97a1-41c9-83b5-7fa5831f9804"),
                            RoleResouceId = new Guid("3237696c-fbe2-4361-85cb-6e346599400a")
                        },
                        new
                        {
                            RoleId = new Guid("d662deff-a947-448e-a669-ae3466de3445"),
                            ResourceId = new Guid("32da8348-5535-4307-ad22-db8cc0e1aa42"),
                            RoleResouceId = new Guid("bc249751-5d88-40f3-944d-be49e4910e25")
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.StudyType", b =>
                {
                    b.Property<int>("StudyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudyTypeId");

                    b.ToTable("StudyType");

                    b.HasData(
                        new
                        {
                            StudyTypeId = 1,
                            StudyTypeName = "前端"
                        },
                        new
                        {
                            StudyTypeId = 2,
                            StudyTypeName = "后端"
                        },
                        new
                        {
                            StudyTypeId = 3,
                            StudyTypeName = "数据库"
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.Studyknowledge", b =>
                {
                    b.Property<Guid>("StudyknowledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("StudyknowledgeContent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StudyknowledgeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("StudyknowledgeId");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("Studyknowledge");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.UserRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("82eba0f4-d30c-4f61-b70b-1c36025552b1"),
                            UserId = new Guid("8914cb11-3b03-4842-9c90-22b9ae104be0"),
                            UserRoleId = new Guid("91305b5b-1884-43e9-a558-f162d476290c")
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Account")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hobby")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("bit");

                    b.Property<string>("Moblie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("QQ")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8914cb11-3b03-4842-9c90-22b9ae104be0"),
                            Account = 1314520m,
                            Birthday = new DateTime(2001, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "1328703932@qq.com",
                            Hobby = "Do Love",
                            IsDel = true,
                            Moblie = "15014080506",
                            Name = "小杰",
                            QQ = 1328703932m
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.UserPassword", b =>
                {
                    b.Property<Guid>("UserPasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastPassword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserPasswordId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPassword");

                    b.HasData(
                        new
                        {
                            UserPasswordId = new Guid("eb9e50b0-d946-4801-92c9-cffeed8a075d"),
                            NewPassword = "E10ADC3949BA59ABBE56E057F20F883E",
                            UserId = new Guid("8914cb11-3b03-4842-9c90-22b9ae104be0")
                        });
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.LogRecord", b =>
                {
                    b.HasOne("StudyMVCFu.Model.User", "User")
                        .WithMany("LogRecord")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.RoleResouce", b =>
                {
                    b.HasOne("StudyMVCFu.Model.DomainModel.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyMVCFu.Model.DomainModel.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.Studyknowledge", b =>
                {
                    b.HasOne("StudyMVCFu.Model.DomainModel.StudyType", "StudyType")
                        .WithMany("Studyknowledge")
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyType");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.UserRole", b =>
                {
                    b.HasOne("StudyMVCFu.Model.DomainModel.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyMVCFu.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyMVCFu.Model.UserPassword", b =>
                {
                    b.HasOne("StudyMVCFu.Model.User", "User")
                        .WithOne("UserPassword")
                        .HasForeignKey("StudyMVCFu.Model.UserPassword", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyMVCFu.Model.DomainModel.StudyType", b =>
                {
                    b.Navigation("Studyknowledge");
                });

            modelBuilder.Entity("StudyMVCFu.Model.User", b =>
                {
                    b.Navigation("LogRecord");

                    b.Navigation("UserPassword");
                });
#pragma warning restore 612, 618
        }
    }
}
